// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "name", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "passwordHash", type: "string" },
    ],
  },
  { name: "todos", columns: [{ name: "content", type: "string" }] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Todos = InferredTypes["todos"];
export type TodosRecord = Todos & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  todos: TodosRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://todos-sv70td.eu-west-1.xata.sh/db/todos",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
